@{
    ViewData["Title"] = "ChatApp - Hoş Geldiniz";
    Layout = null;
}

<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    
    <!-- Bootstrap 5 CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Bootstrap Icons -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css">
    <!-- Chat Modern CSS for consistency -->
    <link rel="stylesheet" href="/css/chat-modern.css" />
    
    <style>
        body {
            background: var(--surface-darker);
            font-family: var(--font-family);
            min-height: 100vh;
            margin: 0;
        }

        .home-container {
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 20px;
        }

        .welcome-card {
            background: var(--surface);
            border-radius: 24px;
            border: 1px solid var(--border);
            box-shadow: 0 20px 60px rgba(0,0,0,0.2);
            overflow: hidden;
            max-width: 900px;
            width: 100%;
        }

        .feature-box {
            transition: transform 0.3s ease;
            border-radius: 15px;
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
        }
        
        .feature-box:hover {
            transform: translateY(-5px);
            background: rgba(255, 255, 255, 0.15);
        }

        .hero-content {
            animation: fadeInUp 1s ease-out;
        }

        @@keyframes fadeInUp {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }
        
        .btn-group .btn {
            min-width: 150px;
        }
    </style>
</head>
<body>
    <div class="row min-vh-100">
        <!-- Sol Taraf - App Bilgisi -->
        <div class="col-lg-6 bg-primary text-white d-flex align-items-center">
            <div class="container p-5">
                <div class="text-center mb-5">
                    <h1 class="display-3 fw-bold mb-3">
                        <i class="fas fa-comments me-3"></i>ChatApp
                    </h1>
                    <p class="lead fs-4">Modern, Güvenli ve Hızlı Mesajlaşma Platformu</p>
                </div>

                <div class="row g-4 mb-5">
                    <div class="col-md-6">
                        <div class="feature-box text-center p-4">
                            <div class="feature-icon mb-3">
                                <i class="fas fa-user-friends fa-3x text-warning"></i>
                            </div>
                            <h4>Özel Mesajlaşma</h4>
                            <p class="small">Arkadaşlarınızla bire bir güvenli mesajlaşma</p>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="feature-box text-center p-4">
                            <div class="feature-icon mb-3">
                                <i class="fas fa-users fa-3x text-success"></i>
                            </div>
                            <h4>Genel Sohbet</h4>
                            <p class="small">Toplulukla birlikte canlı sohbet odası</p>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="feature-box text-center p-4">
                            <div class="feature-icon mb-3">
                                <i class="fas fa-bolt fa-3x text-danger"></i>
                            </div>
                            <h4>Anlık İletişim</h4>
                            <p class="small">SignalR ile gerçek zamanlı mesajlaşma</p>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="feature-box text-center p-4">
                            <div class="feature-icon mb-3">
                                <i class="fas fa-shield-alt fa-3x text-info"></i>
                            </div>
                            <h4>Güvenli Platform</h4>
                            <p class="small">PostgreSQL ile güvenli veri saklama</p>
                        </div>
                    </div>
                </div>

                <div class="text-center">
                    <h3 class="mb-4">✨ ChatApp ile Neler Yapabilirsiniz?</h3>
                    <ul class="list-unstyled fs-5">
                        <li class="mb-2"><i class="fas fa-check text-success me-2"></i> Anında mesaj gönderme</li>
                        <li class="mb-2"><i class="fas fa-check text-success me-2"></i> Aktif kullanıcıları görme</li>
                        <li class="mb-2"><i class="fas fa-check text-success me-2"></i> Özel ve genel sohbet odaları</li>
                        <li class="mb-2"><i class="fas fa-check text-success me-2"></i> Mobil uyumlu tasarım</li>
                    </ul>
                </div>
            </div>
        </div>

        <!-- Sağ Taraf - Login/Register -->
        <div class="col-lg-6 bg-light d-flex align-items-center">
            <div class="container p-5">
                <!-- Login/Register Toggle -->
                <div class="text-center mb-4">
                    <div class="btn-group" role="group">
                        <button type="button" class="btn btn-outline-primary active" id="loginTab">
                            <i class="fas fa-sign-in-alt me-2"></i>Giriş Yap
                        </button>
                        <button type="button" class="btn btn-outline-success" id="registerTab">
                            <i class="fas fa-user-plus me-2"></i>Kayıt Ol
                        </button>
                    </div>
                    <!-- Debug butonu - geçici -->
                    <div class="mt-2">
                        <button type="button" class="btn btn-outline-warning btn-sm" onclick="clearStorageAndReload()">
                            <i class="fas fa-trash me-1"></i>Oturum Temizle
                        </button>
                        <button type="button" class="btn btn-outline-danger btn-sm ms-1" onclick="offlineAllUsers()">
                            <i class="fas fa-power-off me-1"></i>Herkesi Offline Yap
                        </button>
                    </div>
                </div>

                <!-- Login Form -->
                <div id="loginSection" class="auth-section">
                    <div class="card shadow">
                        <div class="card-header bg-primary text-white text-center">
                            <h4><i class="fas fa-sign-in-alt me-2"></i>Giriş Yap</h4>
                        </div>
                        <div class="card-body p-4">
                            <form id="loginForm">
                                <div class="mb-3">
                                    <label for="loginUsername" class="form-label">
                                        <i class="fas fa-user me-1"></i>Kullanıcı Adı
                                    </label>
                                    <input type="text" class="form-control form-control-lg" id="loginUsername" 
                                           placeholder="Kullanıcı adınız" required maxlength="20">
                                </div>
                                <div class="mb-3">
                                    <label for="loginPassword" class="form-label">
                                        <i class="fas fa-lock me-1"></i>Şifre
                                    </label>
                                    <input type="password" class="form-control form-control-lg" id="loginPassword" 
                                           placeholder="Şifreniz" required minlength="6">
                                </div>
                                <div class="d-grid">
                                    <button type="submit" class="btn btn-primary btn-lg" id="loginButton">
                                        <i class="fas fa-sign-in-alt me-2"></i>Giriş Yap
                                    </button>
                                </div>
                            </form>
                            <div id="loginStatus" class="mt-3"></div>
                        </div>
                    </div>
                </div>

                <!-- Register Form -->
                <div id="registerSection" class="auth-section" style="display: none;">
                    <div class="card shadow">
                        <div class="card-header bg-success text-white text-center">
                            <h4><i class="fas fa-user-plus me-2"></i>Kayıt Ol</h4>
                        </div>
                        <div class="card-body p-4">
                            <form id="registerForm">
                                <div class="mb-3">
                                    <label for="registerUsername" class="form-label">
                                        <i class="fas fa-user me-1"></i>Kullanıcı Adı
                                    </label>
                                    <input type="text" class="form-control form-control-lg" id="registerUsername" 
                                           placeholder="Kullanıcı adınız (3-20 karakter)" required maxlength="20" minlength="3">
                                </div>
                                <div class="mb-3">
                                    <label for="registerEmail" class="form-label">
                                        <i class="fas fa-envelope me-1"></i>E-posta
                                    </label>
                                    <input type="email" class="form-control form-control-lg" id="registerEmail" 
                                           placeholder="E-posta adresiniz" required>
                                </div>
                                <div class="mb-3">
                                    <label for="registerPassword" class="form-label">
                                        <i class="fas fa-lock me-1"></i>Şifre
                                    </label>
                                    <input type="password" class="form-control form-control-lg" id="registerPassword" 
                                           placeholder="Şifreniz (en az 6 karakter)" required minlength="6">
                                </div>
                                <div class="mb-3">
                                    <label for="registerConfirmPassword" class="form-label">
                                        <i class="fas fa-lock me-1"></i>Şifre Tekrar
                                    </label>
                                    <input type="password" class="form-control form-control-lg" id="registerConfirmPassword" 
                                           placeholder="Şifrenizi tekrar girin" required minlength="6">
                                </div>
                                <div class="mb-3">
                                    <label for="profileImageUrl" class="form-label">
                                        <i class="fas fa-image me-1"></i>Profil Fotoğrafı <small class="text-muted">(İsteğe Bağlı)</small>
                                    </label>
                                    <div class="input-group">
                                        <input type="url" class="form-control form-control-lg" id="profileImageUrl" 
                                               placeholder="https://example.com/profil-fotografi.jpg">
                                        <button type="button" class="btn btn-outline-secondary" onclick="previewProfileImage()">
                                            <i class="fas fa-eye"></i> Önizle
                                        </button>
                                    </div>
                                    <div id="profileImagePreview" class="mt-2" style="display: none;">
                                        <div class="text-center">
                                            <img id="previewImg" src="" alt="Profil Önizleme" 
                                                 class="rounded-circle border" style="width: 64px; height: 64px; object-fit: cover;">
                                            <div class="mt-1">
                                                <small class="text-success"><i class="fas fa-check"></i> Profil fotoğrafı önizlemesi</small>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-text">
                                        <i class="fas fa-info-circle me-1"></i>
                                        Profil fotoğrafı eklemek isteğe bağlıdır. Boş bırakırsanız varsayılan avatar kullanılır.
                                        <br><small>Desteklenen siteler: imgur, gravatar, ya da herhangi bir resim URL'i</small>
                                    </div>
                                </div>
                                <div class="d-grid">
                                    <button type="submit" class="btn btn-success btn-lg" id="registerButton">
                                        <i class="fas fa-user-plus me-2"></i>Kayıt Ol
                                    </button>
                                </div>
                            </form>
                            <div id="registerStatus" class="mt-3"></div>
                        </div>
                    </div>
                </div>

                <!-- Online Users -->
                <div class="mt-4">
                    <div class="card">
                        <div class="card-header">
                            <h6 class="mb-0">
                                <i class="fas fa-users text-success me-2"></i>
                                Aktif Kullanıcılar (<span id="onlineCount">0</span>)
                            </h6>
                        </div>
                        <div class="card-body">
                            <div id="onlineUsers" class="small text-muted">
                                <em>Yükleniyor...</em>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Bootstrap 5 JS Bundle -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
<!-- Font Awesome for icons -->
<script src="https://kit.fontawesome.com/your-fontawesome-kit.js" crossorigin="anonymous"></script>

<script>
let currentConnectionId = '';

// DOM yüklendiğinde çalışacak fonksiyonlar
window.addEventListener('DOMContentLoaded', function() {
    // Login/Register tab switching
    setupTabSwitching();
                console.log('Cookie ve localStorage uyuşmuyor, localStorage temizleniyor');
                localStorage.removeItem('chatapp_username');
    // Ana sayfa için online kullanıcıları al
    loadOnlineUsers();
});

// Tab switching setup function
function setupTabSwitching() {
    // Login/Register tab event listeners
    document.getElementById('loginTab').addEventListener('click', function() {
        showLoginSection();
    });

    document.getElementById('registerTab').addEventListener('click', function() {
        showRegisterSection();
    });
}

function showLoginSection() {
    document.getElementById('loginSection').style.display = 'block';
    document.getElementById('registerSection').style.display = 'none';
    document.getElementById('loginTab').classList.add('active');
    document.getElementById('registerTab').classList.remove('active');
}

function showRegisterSection() {
    document.getElementById('loginSection').style.display = 'none';
    document.getElementById('registerSection').style.display = 'block';
    document.getElementById('loginTab').classList.remove('active');
    document.getElementById('registerTab').classList.add('active');
}

// Login Form
document.getElementById('loginForm').addEventListener('submit', async function(e) {
    e.preventDefault();
    
    const username = document.getElementById('loginUsername').value.trim();
    const password = document.getElementById('loginPassword').value;
    
    if (!username || !password) {
        showStatus('loginStatus', 'Kullanıcı adı ve şifre gereklidir', 'warning');
        return;
    }

    if (username.length < 3) {
        showStatus('loginStatus', 'Kullanıcı adı en az 3 karakter olmalıdır', 'warning');
        return;
    }

    if (password.length < 6) {
        showStatus('loginStatus', 'Şifre en az 6 karakter olmalıdır', 'warning');
        return;
    }

    const loginButton = document.getElementById('loginButton');
    loginButton.disabled = true;
    loginButton.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i>Giriş yapılıyor...';

    try {
        const response = await fetch('/api/userapi/login', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                username: username,
                password: password,
                connectionId: 'home-page-login'
            })
        });

        const result = await response.json();
        console.log('Login response:', result);

        if (result.success) {
            showStatus('loginStatus', `✅ Hoş geldin ${username}!`, 'success');
            
            localStorage.setItem('chatapp_username', username);
            localStorage.setItem('chatapp_login_time', new Date().toISOString());
            
            console.log('Redirecting to /Chat immediately...');
            // Hemen yönlendir - timeout kaldırıldı
            window.location.href = '/Chat';
        } else {
            showStatus('loginStatus', `❌ ${result.message}`, 'danger');
        }
    } catch (error) {
        showStatus('loginStatus', '❌ Giriş yapılırken hata oluştu', 'danger');
        console.error('Login error:', error);
    } finally {
        loginButton.disabled = false;
        loginButton.innerHTML = '<i class="fas fa-sign-in-alt me-2"></i>Giriş Yap';
    }
});

// Register Form
document.getElementById('registerForm').addEventListener('submit', async function(e) {
    e.preventDefault();
    
    const username = document.getElementById('registerUsername').value.trim();
    const email = document.getElementById('registerEmail').value.trim();
    const password = document.getElementById('registerPassword').value;
    const confirmPassword = document.getElementById('registerConfirmPassword').value;
    const profileImageUrl = document.getElementById('profileImageUrl').value.trim();
    
    if (!username || !email || !password || !confirmPassword) {
        showStatus('registerStatus', 'Tüm alanları doldurun', 'warning');
        return;
    }

    if (username.length < 3 || username.length > 20) {
        showStatus('registerStatus', 'Kullanıcı adı 3-20 karakter arası olmalıdır', 'warning');
        return;
    }

    if (password.length < 6) {
        showStatus('registerStatus', 'Şifre en az 6 karakter olmalıdır', 'warning');
        return;
    }

    if (password !== confirmPassword) {
        showStatus('registerStatus', 'Şifreler eşleşmiyor', 'warning');
        return;
    }

    if (email.length < 5) {
        showStatus('registerStatus', 'Geçerli bir e-posta adresi girin', 'warning');
        return;
    }

    const registerButton = document.getElementById('registerButton');
    registerButton.disabled = true;
    registerButton.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i>Kayıt oluşturuluyor...';

    try {
        const response = await fetch('/api/userapi/register', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                username: username,
                email: email,
                password: password,
                profileImageUrl: profileImageUrl || null
            })
        });

        const result = await response.json();

        if (result.success) {
            showStatus('registerStatus', `✅ Kayıt başarılı! Hoş geldin ${username}!`, 'success');
            
            localStorage.setItem('chatapp_username', username);
            localStorage.setItem('chatapp_login_time', new Date().toISOString());
            
            // Hemen yönlendir - timeout kaldırıldı
            window.location.href = '/Chat';
        } else {
            showStatus('registerStatus', `❌ ${result.message}`, 'danger');
        }
    } catch (error) {
        showStatus('registerStatus', '❌ Kayıt olurken hata oluştu', 'danger');
        console.error('Register error:', error);
    } finally {
        registerButton.disabled = false;
        registerButton.innerHTML = '<i class="fas fa-user-plus me-2"></i>Kayıt Ol';
    }
});

// Online kullanıcıları yükle - Ana sayfa için sadece bir kere
async function loadOnlineUsers() {
    try {
        const response = await fetch('/api/userapi/online-users');
        const data = await response.json();
        
        if (data.success) {
            const count = data.users.length;
            document.getElementById('onlineCount').textContent = count;
            
            const onlineUsersDiv = document.getElementById('onlineUsers');
            
            if (count === 0) {
                onlineUsersDiv.innerHTML = '<em class="text-muted">Şu anda aktif kullanıcı bulunmuyor</em>';
            } else {
                const userList = data.users.map(user => 
                    `<span class="badge bg-success me-1 mb-1">${user.avatar} ${user.username}</span>`
                ).join('');
                onlineUsersDiv.innerHTML = userList;
            }
        }
    } catch (error) {
        console.error('Online users load error:', error);
        document.getElementById('onlineUsers').innerHTML = '<em class="text-danger">Yüklenemedi</em>';
    }
}

// Profil fotoğrafı önizleme
function previewProfileImage() {
    const url = document.getElementById('profileImageUrl').value.trim();
    const previewDiv = document.getElementById('profileImagePreview');
    const previewImg = document.getElementById('previewImg');
    
    if (!url) {
        previewDiv.style.display = 'none';
        return;
    }
    
    // Geçerli URL kontrolü
    try {
        new URL(url);
    } catch {
        alert('Geçerli bir URL girin');
        return;
    }
    
    previewImg.src = url;
    previewImg.onload = function() {
        previewDiv.style.display = 'block';
        previewDiv.innerHTML = `
            <div class="text-center">
                <img src="${url}" alt="Profil Önizleme" 
                     class="rounded-circle border" style="width: 64px; height: 64px; object-fit: cover;">
                <div class="mt-1">
                    <small class="text-success"><i class="fas fa-check"></i> Profil fotoğrafı yüklendi!</small>
                </div>
            </div>
        `;
    };
    previewImg.onerror = function() {
        previewDiv.style.display = 'block';
        previewDiv.innerHTML = `
            <div class="text-center">
                <div class="alert alert-warning">
                    <i class="fas fa-exclamation-triangle"></i> Resim yüklenemedi. URL'i kontrol edin.
                </div>
            </div>
        `;
    };
}

// Status mesajı gösterme
function showStatus(elementId, message, type) {
    const statusDiv = document.getElementById(elementId);
    statusDiv.innerHTML = `
        <div class="alert alert-${type} alert-dismissible fade show" role="alert">
            ${message}
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    `;
    
    setTimeout(() => {
        const alertDiv = statusDiv.querySelector('.alert');
        if (alertDiv && alertDiv.parentNode) {
            alertDiv.remove();
        }
    }, 5000);
}

// Ana sayfa için sadece 2 dakikada bir yenile (çok az sıklık)
setInterval(loadOnlineUsers, 120000);

// Debug fonksiyonu - localStorage ve cookie temizle
function clearStorageAndReload() {
    console.log('Clearing localStorage and cookies...');
    const username = localStorage.getItem('chatapp_username');
    
    // Eğer kullanıcı adı varsa force-logout API'sini çağır
    if (username) {
        fetch('/api/userapi/force-logout', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                username: username
            })
        }).then(response => response.json())
          .then(result => {
              console.log('Force logout API result:', result);
              if (result.success) {
                  showStatus('loginStatus', `${username} kullanıcısı zorla offline yapıldı.`, 'success');
              }
          })
          .catch(error => {
              console.error('Force logout API error:', error);
          });
    }
    
    localStorage.removeItem('chatapp_username');
    localStorage.removeItem('chatapp_login_time');
    
    // Cookie'yi de temizle
    document.cookie = 'chatapp_username=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;';
    
    showStatus('loginStatus', 'Oturum bilgileri temizlendi ve kullanıcı offline yapıldı. Sayfa yenileniyor...', 'info');
    
    setTimeout(() => {
        location.reload();
    }, 2000);
}

// Debug fonksiyonu - tüm kullanıcıları offline yap
function offlineAllUsers() {
    if (!confirm('Tüm kullanıcıları offline yapmak istediğinizden emin misiniz?')) {
        return;
    }
    
    console.log('Making all users offline...');
    
    fetch('/api/userapi/debug-offline-all', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        }
    }).then(response => response.json())
      .then(result => {
          console.log('Offline all result:', result);
          if (result.success) {
              showStatus('loginStatus', result.message, 'success');
          } else {
              showStatus('loginStatus', 'Hata: ' + result.message, 'danger');
          }
          setTimeout(() => {
              location.reload();
          }, 2000);
      })
      .catch(error => {
          console.error('Offline all error:', error);
          showStatus('loginStatus', 'İşlem sırasında hata oluştu', 'danger');
      });
}
</script>
</body>
</html>
