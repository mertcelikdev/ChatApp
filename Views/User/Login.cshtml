@{
    ViewData["Title"] = "Giriş Yap";
    Layout = "_Layout";
}

<div class="row justify-content-center">
    <div class="col-md-6">
        <div class="card mt-5">
            <div class="card-header bg-primary text-white text-center">
                <h3><i class="fas fa-sign-in-alt"></i> ChatApp'e Giriş Yap</h3>
            </div>
            <div class="card-body">
                <form id="loginForm">
                    <div class="mb-3">
                        <label for="username" class="form-label">
                            <i class="fas fa-user"></i> Kullanıcı Adı:
                        </label>
                        <input type="text" class="form-control" id="username" placeholder="Kullanıcı adınızı girin" required maxlength="20">
                        <div class="form-text">En fazla 20 karakter olmalıdır</div>
                    </div>
                    
                    <div class="mb-3">
                        <label for="password" class="form-label">
                            <i class="fas fa-lock"></i> Şifre:
                        </label>
                        <input type="password" class="form-control" id="password" placeholder="Şifrenizi girin" required minlength="6">
                        <div class="form-text">En az 6 karakter olmalıdır</div>
                    </div>
                    
                    <div class="d-grid">
                        <button type="submit" class="btn btn-primary btn-lg" id="loginButton">
                            <i class="fas fa-sign-in-alt"></i> Giriş Yap
                        </button>
                    </div>
                </form>

                <div id="loginStatus" class="mt-3"></div>

                <div class="text-center mt-4">
                    <hr>
                    <p class="mb-2">Hesabınız yok mu?</p>
                    <a href="/User/Register" class="btn btn-outline-success">
                        <i class="fas fa-user-plus"></i> Kayıt Ol
                    </a>
                </div>

                <!-- Online Users -->
                <div class="mt-4">
                    <h6><i class="fas fa-users text-success"></i> Aktif Kullanıcılar (<span id="onlineCount">0</span>)</h6>
                    <div id="onlineUsers" class="small text-muted">
                        <em>Yükleniyor...</em>
                    </div>
                </div>
            </div>
        </div>

        <!-- Info Card -->
        <div class="card mt-3">
            <div class="card-body">
                <h6><i class="fas fa-info-circle text-info"></i> Test Kullanıcıları</h6>
                <div class="table-responsive">
                    <table class="table table-sm">
                        <thead>
                            <tr>
                                <th>Kullanıcı Adı</th>
                                <th>Şifre</th>
                                <th>Avatar</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td><code>admin</code></td>
                                <td><code>123456</code></td>
                                <td>👑</td>
                            </tr>
                            <tr>
                                <td><code>user1</code></td>
                                <td><code>user123</code></td>
                                <td>😊</td>
                            </tr>
                            <tr>
                                <td><code>test</code></td>
                                <td><code>test123</code></td>
                                <td>🧪</td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                
                <hr>
                
                <h6><i class="fas fa-rocket text-primary"></i> ChatApp Özellikleri</h6>
                <div class="row">
                    <div class="col-6">
                        <small><i class="fas fa-user-friends text-primary"></i> Özel Mesajlaşma</small>
                    </div>
                    <div class="col-6">
                        <small><i class="fas fa-users text-success"></i> Genel Sohbet</small>
                    </div>
                </div>
                <div class="row mt-2">
                    <div class="col-6">
                        <small><i class="fas fa-bolt text-warning"></i> Anlık İletişim</small>
                    </div>
                    <div class="col-6">
                        <small><i class="fas fa-database text-info"></i> PostgreSQL</small>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
<script>
// Kullanıcı zaten giriş yapmışsa chat sayfasına yönlendir
window.addEventListener('DOMContentLoaded', function() {
    const savedUsername = localStorage.getItem('chatapp_username');
    const loginTime = localStorage.getItem('chatapp_login_time');
    
    if (savedUsername && loginTime) {
        // Giriş zamanını kontrol et (24 saat geçerliliği)
        const loginDate = new Date(loginTime);
        const now = new Date();
        const hoursDiff = (now - loginDate) / (1000 * 60 * 60);
        
        if (hoursDiff < 24) {
            console.log(`Kullanıcı ${savedUsername} zaten giriş yapmış. Chat sayfasına yönlendiriliyor...`);
            showStatus(`Hoş geldin ${savedUsername}! Chat sayfasına yönlendiriliyorsun...`, 'success');
            setTimeout(() => {
                window.location.href = '/Chat';
            }, 1000);
            return;
        } else {
            // Eski oturum süresi dolmuş, temizle
            localStorage.removeItem('chatapp_username');
            localStorage.removeItem('chatapp_login_time');
        }
    }
});

// SignalR Connection
const connection = new signalR.HubConnectionBuilder()
    .withUrl("/chathub")
    .build();

let currentConnectionId = '';

// Connection durumu
connection.start().then(function () {
    currentConnectionId = connection.connectionId;
    console.log('🔗 SignalR Connected for login');
    loadOnlineUsers();
}).catch(function (err) {
    console.error('❌ SignalR Connection Error:', err);
    showStatus('Bağlantı hatası. Sayfa yenilenerek deneyin.', 'danger');
});

// Login form
document.getElementById('loginForm').addEventListener('submit', async function(e) {
    e.preventDefault();
    
    const username = document.getElementById('username').value.trim();
    const password = document.getElementById('password').value;
    
    if (!username) {
        showStatus('Kullanıcı adı boş olamaz', 'warning');
        return;
    }

    if (!password) {
        showStatus('Şifre boş olamaz', 'warning');
        return;
    }

    if (username.length < 3) {
        showStatus('Kullanıcı adı en az 3 karakter olmalıdır', 'warning');
        return;
    }

    if (password.length < 6) {
        showStatus('Şifre en az 6 karakter olmalıdır', 'warning');
        return;
    }

    if (username.length > 20) {
        showStatus('Kullanıcı adı en fazla 20 karakter olabilir', 'warning');
        return;
    }

    const loginButton = document.getElementById('loginButton');
    loginButton.disabled = true;
    loginButton.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Giriş yapılıyor...';

    try {
        const response = await fetch('/api/userapi/login', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                username: username,
                password: password,
                connectionId: currentConnectionId
            })
        });

        const result = await response.json();

        if (result.success) {
            showStatus(`✅ Hoş geldin ${username}!`, 'success');
            
            // Kullanıcı adını localStorage'a kaydet
            localStorage.setItem('chatapp_username', username);
            localStorage.setItem('chatapp_login_time', new Date().toISOString());
            
            // Ana sayfaya yönlendir
            setTimeout(() => {
                window.location.href = '/Chat';
            }, 1500);
        } else {
            showStatus(`❌ ${result.message}`, 'danger');
        }
    } catch (error) {
        showStatus('❌ Giriş yapılırken hata oluştu', 'danger');
        console.error('Login error:', error);
    } finally {
        loginButton.disabled = false;
        loginButton.innerHTML = '<i class="fas fa-sign-in-alt"></i> Giriş Yap';
    }
});

// Online kullanıcıları yükle
async function loadOnlineUsers() {
    try {
        const response = await fetch('/api/userapi/online');
        const result = await response.json();
        
        if (result.success) {
            updateOnlineUsers(result.users);
        }
    } catch (error) {
        console.error('Error loading online users:', error);
        document.getElementById('onlineUsers').innerHTML = '<em class="text-danger">Yüklenemedi</em>';
    }
}

function updateOnlineUsers(users) {
    const onlineCount = document.getElementById('onlineCount');
    const onlineUsers = document.getElementById('onlineUsers');
    
    onlineCount.textContent = users.length;
    
    if (users.length === 0) {
        onlineUsers.innerHTML = '<em>Henüz kimse online değil</em>';
    } else {
        const userList = users.map(user => {
            const loginTime = new Date(user.loginTime).toLocaleTimeString();
            return `<span class="badge bg-success me-1">${user.username}</span>`;
        }).join('');
        onlineUsers.innerHTML = userList;
    }
}

function showStatus(message, type = 'info') {
    const statusDiv = document.getElementById('loginStatus');
    statusDiv.innerHTML = `
        <div class="alert alert-${type} alert-dismissible fade show" role="alert">
            ${message}
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    `;
}

// SignalR events for real-time user updates
connection.on('UserJoined', function(data) {
    console.log('👤 User joined:', data);
    loadOnlineUsers(); // Refresh online users
    
    if (data.username) {
        showStatus(`🟢 ${data.username} katıldı`, 'info');
    }
});

connection.on('UserLeft', function(data) {
    console.log('👤 User left:', data);
    loadOnlineUsers(); // Refresh online users
    
    if (data.username) {
        showStatus(`🔴 ${data.username} ayrıldı`, 'warning');
    }
});

// Check if user is already logged in
document.addEventListener('DOMContentLoaded', function() {
    const savedUsername = localStorage.getItem('chatapp_username');
    if (savedUsername) {
        document.getElementById('username').value = savedUsername;
        showStatus(`Son giriş: ${savedUsername}`, 'info');
    }
});

</script>
}
